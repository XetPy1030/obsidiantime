# Generated by Django 5.2.4 on 2025-07-20 15:51

import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('contenttypes', '0002_remove_content_type_name'),
    ]

    operations = [
        migrations.CreateModel(
            name='Analytics',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('google_analytics_id', models.CharField(blank=True, help_text='ID отслеживания Google Analytics (G-XXXXXXXXXX)', max_length=50, verbose_name='Google Analytics ID')),
                ('yandex_metrika_id', models.CharField(blank=True, help_text='ID счетчика Яндекс.Метрики', max_length=50, verbose_name='Yandex Metrika ID')),
                ('google_search_console', models.CharField(blank=True, help_text='Код подтверждения Google Search Console', max_length=100, verbose_name='Google Search Console')),
                ('yandex_webmaster', models.CharField(blank=True, help_text='Код подтверждения Яндекс.Вебмастер', max_length=100, verbose_name='Yandex Webmaster')),
                ('facebook_pixel', models.CharField(blank=True, help_text='ID пикселя Facebook', max_length=50, verbose_name='Facebook Pixel ID')),
                ('vk_pixel', models.CharField(blank=True, help_text='ID пикселя ВКонтакте', max_length=50, verbose_name='VK Pixel ID')),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Analytics Settings',
                'verbose_name_plural': 'Analytics Settings',
            },
        ),
        migrations.CreateModel(
            name='RobotsRule',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('user_agent', models.CharField(default='*', help_text='User agent для правила (например, *, Googlebot)', max_length=100, verbose_name='User Agent')),
                ('rule_type', models.CharField(choices=[('allow', 'Allow'), ('disallow', 'Disallow')], max_length=10, verbose_name='Rule Type')),
                ('path', models.CharField(help_text='Путь для правила (например, /admin/)', max_length=255, verbose_name='Path')),
                ('is_active', models.BooleanField(default=True)),
                ('order', models.PositiveIntegerField(default=0)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'verbose_name': 'Robots Rule',
                'verbose_name_plural': 'Robots Rules',
                'ordering': ['order', 'user_agent', 'rule_type'],
            },
        ),
        migrations.CreateModel(
            name='SitemapURL',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('url', models.CharField(max_length=255, unique=True)),
                ('priority', models.FloatField(default=0.5)),
                ('changefreq', models.CharField(choices=[('always', 'Always'), ('hourly', 'Hourly'), ('daily', 'Daily'), ('weekly', 'Weekly'), ('monthly', 'Monthly'), ('yearly', 'Yearly'), ('never', 'Never')], default='weekly', max_length=20)),
                ('lastmod', models.DateTimeField(auto_now=True)),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'verbose_name': 'Sitemap URL',
                'verbose_name_plural': 'Sitemap URLs',
                'ordering': ['-priority', 'url'],
            },
        ),
        migrations.CreateModel(
            name='SEOGenericModel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('meta_title', models.CharField(blank=True, help_text='Заголовок страницы (до 60 символов)', max_length=60, verbose_name='Meta Title')),
                ('meta_description', models.TextField(blank=True, help_text='Описание страницы (до 160 символов)', max_length=160, verbose_name='Meta Description')),
                ('meta_keywords', models.CharField(blank=True, help_text='Ключевые слова через запятую', max_length=255, verbose_name='Meta Keywords')),
                ('canonical_url', models.URLField(blank=True, help_text='Канонический URL страницы', verbose_name='Canonical URL')),
                ('og_title', models.CharField(blank=True, help_text='Заголовок для социальных сетей', max_length=60, verbose_name='Open Graph Title')),
                ('og_description', models.TextField(blank=True, help_text='Описание для социальных сетей', max_length=160, verbose_name='Open Graph Description')),
                ('og_image', models.ImageField(blank=True, help_text='Изображение для социальных сетей (1200x630px)', null=True, upload_to='seo/og_images/', verbose_name='Open Graph Image')),
                ('og_type', models.CharField(default='website', help_text='Тип контента для социальных сетей', max_length=50, verbose_name='Open Graph Type')),
                ('twitter_card', models.CharField(default='summary_large_image', help_text='Тип карточки Twitter', max_length=50, verbose_name='Twitter Card Type')),
                ('twitter_title', models.CharField(blank=True, help_text='Заголовок для Twitter', max_length=60, verbose_name='Twitter Title')),
                ('twitter_description', models.TextField(blank=True, help_text='Описание для Twitter', max_length=160, verbose_name='Twitter Description')),
                ('twitter_image', models.ImageField(blank=True, help_text='Изображение для Twitter (1200x600px)', null=True, upload_to='seo/twitter_images/', verbose_name='Twitter Image')),
                ('schema_markup', models.TextField(blank=True, help_text='JSON-LD разметка для поисковых систем', verbose_name='Schema.org Markup')),
                ('robots_index', models.BooleanField(default=True, help_text='Разрешить индексацию страницы', verbose_name='Allow Indexing')),
                ('robots_follow', models.BooleanField(default=True, help_text='Разрешить следование по ссылкам', verbose_name='Allow Following Links')),
                ('priority', models.FloatField(default=0.5, help_text='Приоритет страницы в sitemap (0.0-1.0)', verbose_name='Sitemap Priority')),
                ('changefreq', models.CharField(choices=[('always', 'Always'), ('hourly', 'Hourly'), ('daily', 'Daily'), ('weekly', 'Weekly'), ('monthly', 'Monthly'), ('yearly', 'Yearly'), ('never', 'Never')], default='weekly', help_text='Частота изменения страницы', max_length=20, verbose_name='Change Frequency')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('object_id', models.PositiveIntegerField()),
                ('content_type', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='contenttypes.contenttype')),
            ],
            options={
                'verbose_name': 'Generic SEO Metadata',
                'verbose_name_plural': 'Generic SEO Metadata',
                'unique_together': {('content_type', 'object_id')},
            },
        ),
    ]
